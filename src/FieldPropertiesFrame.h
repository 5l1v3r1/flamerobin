/*
  The contents of this file are subject to the Initial Developer's Public
  License Version 1.0 (the "License"); you may not use this file except in
  compliance with the License. You may obtain a copy of the License here:
  http://www.flamerobin.org/license.html.

  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.

  The Original Code is FlameRobin (TM).

  The Initial Developer of the Original Code is Milan Babuskov.

  Portions created by the original developer
  are Copyright (C) 2004 Milan Babuskov.

  All Rights Reserved.

  Contributor(s): Nando Dessena
*/

// -*- C++ -*- generated by wxGlade 0.2.2 on Tue Aug 31 13:11:27 2004

#include <wx/wx.h>
#include <wx/image.h>

#ifndef FIELDPROPERTIESFRAME_H
#define FIELDPROPERTIESFRAME_H

// begin wxGlade: dependencies
#include <wx/statline.h>
// end wxGlade

#include "metadata/column.h"
#include "metadata/table.h"
#include "observer.h"
#include "BaseFrame.h"

class FieldPropertiesFrame: public BaseFrame, public YxObserver {
public:
    // begin wxGlade: FieldPropertiesFrame::ids
    enum {
        ID_button_edit_domain = 102,
        ID_button_ok = 103,
        ID_button_cancel = 104,
        ID_radio_new = 111,
        ID_radio_existing = 112,
        ID_textctrl_generatorname = 114,
        ID_textctrl_fieldname = 117,
        ID_cb_generators = 115,
        ID_cb_charset = 118,
        ID_cb_trigger = 110,
		ID_cb_domains = 116
    };
    // end wxGlade

    void OnButtonEditDomainClick(wxCommandEvent &event);
    void OnButtonOkClick(wxCommandEvent &event);
    void OnButtonCancelClick(wxCommandEvent &event);

    void OnRadioNewClick(wxCommandEvent &event);
    void OnRadioExistingClick(wxCommandEvent &event);
    void OnCbGeneratorsClick(wxCommandEvent &event);
    void OnCbTriggerClick(wxCommandEvent &event);
    void OnCbDomainsClick(wxCommandEvent &event);
    void OnCbCharsetClick(wxCommandEvent &event);
    void OnTextctrlGeneratornameChange(wxCommandEvent &event);
    void OnTextctrlFieldnameChange(wxCommandEvent &event);

	// YDatabase is required so that domains, charsets, generators can be loaded
    FieldPropertiesFrame(wxWindow* parent, int id, wxString title, YTable *table, const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, long style=wxDEFAULT_FRAME_STYLE);
	void setField(YColumn *field);
	void setProperties();

private:
	void loadCollations(std::string desired);
	void updateSqlWindow();
	YColumn *fieldM;		// needed when field is edited
	YTable *tableM;			// needed when new field is added

    // begin wxGlade: FieldPropertiesFrame::methods
    void set_properties();
    void do_layout();
    // end wxGlade

protected:
	void removeObservedObject(YxSubject *object);
	void updateDomainInfo(std::string domain);
	bool getDomainInfo(std::string domain, std::string& type, std::string& size, std::string& scale, std::string& charset);
	void update();

    // begin wxGlade: FieldPropertiesFrame::attributes
    wxStaticText* label_8;
    wxTextCtrl* textctrl_fieldname;
    wxStaticText* label_1;
    wxComboBox* cb_domains;
    wxButton* button_edit_domain;
    wxStaticText* label_2;
    wxComboBox* cb_datatypes;
    wxStaticText* label_3;
    wxTextCtrl* textctrl_size;
    wxStaticText* label_4;
    wxTextCtrl* textctrl_scale;
    wxCheckBox* cb_notnull;
    wxStaticText* label_5;
    wxComboBox* cb_charset;
    wxStaticText* label_6;
    wxComboBox *cb_collate;
    wxStaticLine* static_line_1;
    wxStaticText* label_7;
    wxRadioButton* radio_new;
    wxTextCtrl* textctrl_generatorname;
    wxRadioButton* radio_existing;
    wxComboBox* cb_generators;
    wxCheckBox* cb_trigger;
    wxTextCtrl* textctrl_sql;
    wxButton* button_ok;
    wxButton* button_cancel;
    wxPanel* panel_1;
    // end wxGlade

    DECLARE_EVENT_TABLE()
    virtual const std::string getName() const;
};

#endif // FIELDPROPERTIESFRAME_H
