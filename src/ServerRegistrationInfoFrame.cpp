/*
  The contents of this file are subject to the Initial Developer's Public
  License Version 1.0 (the "License"); you may not use this file except in
  compliance with the License. You may obtain a copy of the License here:
  http://www.flamerobin.org/license.html.

  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.

  The Original Code is FlameRobin (TM).

  The Initial Developer of the Original Code is Milan Babuskov.

  Portions created by the original developer
  are Copyright (C) 2004 Milan Babuskov.

  All Rights Reserved.

  $Id$

  Contributor(s): Michael Hieke
*/

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

// for all others, include the necessary headers (this file is usually all you
// need because it includes almost all "standard" wxWindows headers
#ifndef WX_PRECOMP
    #include "wx/wx.h"
#endif
//-----------------------------------------------------------------------------
// -*- C++ -*- generated by wxGlade 0.2.2 on Fri Jul 02 11:09:50 2004

#include "ServerRegistrationInfoFrame.h"
#include "frutils.h"
#include "styleguide.h"

ServerRegistrationInfoFrame::ServerRegistrationInfoFrame(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    BaseDialog(parent, id, title, pos, size, style)
{
    // begin wxGlade: ServerRegistrationInfoFrame::ServerRegistrationInfoFrame
    label_1 = new wxStaticText(this, -1, _("Hostname:"));
    text_ctrl_1 = new wxTextCtrl(this, ID_textctrl_server, wxT("localhost"));
    label_2 = new wxStaticText(this, -1, _("Port number:"));
    text_ctrl_2 = new wxTextCtrl(this, -1, wxT("3050"));
    button_ok = new wxButton(this, ID_button_ok, _("OK"));
    button_cancel = new wxButton(this, ID_button_cancel, _("Cancel"));

    set_properties();
    do_layout();
	updateButtons();
}


void ServerRegistrationInfoFrame::set_properties()
{
	button_ok->SetDefault();
}


void ServerRegistrationInfoFrame::do_layout()
{
#if wxCHECK_VERSION(2, 5, 3)
	// create sizer for controls
	wxFlexGridSizer* sizerControls = new wxFlexGridSizer(2, 2, 
		styleguide().getRelatedControlMargin(wxVERTICAL),
		styleguide().getControlLabelMargin());
	sizerControls->AddGrowableCol(1);

	sizerControls->Add(label_1, 0, wxALIGN_CENTER_VERTICAL);
	sizerControls->Add(text_ctrl_1, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL);
	sizerControls->Add(label_2, 0, wxALIGN_CENTER_VERTICAL);
	sizerControls->Add(text_ctrl_2, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL);
#else
	// make all labels have the same width to simulate a grid of controls
	std::list<wxWindow*> controls;
	controls.push_back(label_1);
	controls.push_back(label_2);
	adjustControlsMinWidth(controls);
	controls.clear();

	// create sizers hierarchy for controls
	wxBoxSizer* sizerRow1 = new wxBoxSizer(wxHORIZONTAL);
	sizerRow1->Add(label_1, 0, wxALIGN_CENTER_VERTICAL);
	sizerRow1->Add(styleguide().getControlLabelMargin(), 0);
	sizerRow1->Add(text_ctrl_1, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL);

	wxBoxSizer* sizerRow2 = new wxBoxSizer(wxHORIZONTAL);
	sizerRow2->Add(label_2, 0, wxALIGN_CENTER_VERTICAL);
	sizerRow2->Add(styleguide().getControlLabelMargin(), 0);
	sizerRow2->Add(text_ctrl_2, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL);

	wxBoxSizer* sizerControls = new wxBoxSizer(wxVERTICAL);
	sizerControls->Add(sizerRow1, 0, wxEXPAND);
	sizerControls->Add(0, styleguide().getRelatedControlMargin(wxVERTICAL));
	sizerControls->Add(sizerRow2, 0, wxEXPAND);
#endif

	// create sizer for buttons -> styleguide class will align it correctly
	wxSizer* sizerButtons = styleguide().createButtonSizer(button_ok, button_cancel);

	// use method in base class to set everything up
	layoutSizers(sizerControls, sizerButtons);
}
