/*
  The contents of this file are subject to the Initial Developer's Public
  License Version 1.0 (the "License"); you may not use this file except in
  compliance with the License. You may obtain a copy of the License here:
  http://www.flamerobin.org/license.html.

  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.

  The Original Code is FlameRobin (TM).

  The Initial Developer of the Original Code is Milan Babuskov.

  Portions created by the original developer
  are Copyright (C) 2004 Milan Babuskov.

  All Rights Reserved.

  Contributor(s): Michael Hieke, Nando Dessena
*/

// -*- C++ -*- generated by wxGlade 0.2.2 on Sun Jan 11 15:14:12 2004

#ifndef DATABASEREGISTRATIONINFOFRAME_H
#define DATABASEREGISTRATIONINFOFRAME_H

#include <wx/wx.h>
#include "metadata/server.h"
#include "metadata/database.h"
#include "BaseDialog.h"

class DatabaseRegistrationInfoFrame: public BaseDialog {
public:
    // begin wxGlade: DatabaseRegistrationInfoFrame::ids
    enum {
		ID_textcontrol_dbpath = 101,
		ID_textcontrol_username,
        ID_browse_button,
        ID_ok_button,
        ID_cancel_button = wxID_CANCEL
    };
    // end wxGlade

	void setDatabase(YDatabase *db);
	void setServer(YServer *s);			// needed to create new db

	// events
	void OnSettingsChange(wxCommandEvent& event);
	void OnOkButtonClick(wxCommandEvent& event);
	void OnCancelButtonClick(wxCommandEvent& event);
	void OnBrowseButtonClick(wxCommandEvent& event);

    DatabaseRegistrationInfoFrame(wxWindow* parent, int id, const wxString& title, bool createDB = false, 
        const wxPoint& pos=wxDefaultPosition, const wxSize& size=wxDefaultSize, 
        long style=wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER);

private:
	YDatabase *databaseM;
	YServer *serverM;
	bool createM;

    // begin wxGlade: DatabaseRegistrationInfoFrame::methods
    void set_properties();
    void do_layout();
    // end wxGlade
	void updateButtons();

protected:
    // begin wxGlade: DatabaseRegistrationInfoFrame::attributes
    wxStaticText* label_2_copy_1;
    wxTextCtrl* database_path_text_ctrl;
    wxButton* browse_button;
    wxStaticText* label_3_copy_1;
    wxTextCtrl* username_text_ctrl;
    wxStaticText* label_4_copy_1;
    wxTextCtrl* password_text_ctrl;
    wxStaticText* label_5_copy_1;
    wxComboBox* charset_combo_box;
    wxStaticText* label_6_copy_1;
    wxTextCtrl* role_text_ctrl;
    wxStaticText* label_1;
    wxComboBox* cb_pagesize;
    wxStaticText* label_2;
    wxComboBox* combo_box_2;
    wxButton* ok_button;
    wxButton* cancel_button;
    // end wxGlade

    DECLARE_EVENT_TABLE()
    virtual const std::string getName() const;
};


#endif // DATABASEREGISTRATIONINFOFRAME_H
