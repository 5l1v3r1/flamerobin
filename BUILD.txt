flamerobin Build Instructions
-------------------------------
Below are build instructions for flamerobin on all supported build environments.

Instructions assume that you have already compiled wxWidgets.
There are some tips regarding that at the end of this file.

-------------------------------
-- Common to all builds
-------------------------------

FR must be built with the same settings for debug/release, Ansi/Unicode etc.
as the wxWidgets library.  Failing to do so will usually lead to compile or
link errors.

Before building on Windows, you MUST set a WXDIR environment variable which
points to your wxWidgets root directory. To do this, go to
Start->Control Panel->System and select the "Advanced" tab. Then, click the
"Environment Variables" button and add WXDIR to the user or system env vars.
If you are using Windows98, you can set the variable from the command line,
using the "set" command.

-------------------------------
-- MSW - Visual C++ Build Instructions
-------------------------------

There are two ways to build using Microsoft Visual C++. One is via the dsp/dsw
project files, and the other is via the makefile.vc command line makefile.

* Using the dsp/dsw projects *

Double click on flamerobin\flamerobin.dsw, select a build configuration by
going to the Build menu, selecting "Set build configuration" and then
picking a config, then build!

* Using the makefiles *
To use the makefiles, start up a command line and navigate to the
flamerobin directory. There, run the following command:

nmake -f makefile.vc <BUILD OPTIONS>

Build options can be any of the following:

WXDIR=<dir> - tells the makefile where to find the root wxWidgets directory
FINAL=<0,1> - tells whether to build debug (0) or release (1) build
USEDLL=<0,1> - tells whether to link against wx static or dynamic libs
UNICODE=<0,1> - tells whether to link against wx ansi or unicode build

WXDIR *must* be specified (or set as an environment variable), but the rest
default to 0 and are optional.

-------------------------------
-- MSW - Visual C++ 2005 Express Build Instructions
-------------------------------

Microsoft Visual C++ Express is a freeware version of MS Visual Studio. 
There are two ways to build FlameRobin. One is via the dsp/dsw
project files, and the other is via the makefile.vc command line makefile.

* Using the dsp/dsw/sln projects *

Double click on flamerobin\flamerobin_flamerobin.sln, select a build configuration by
going to the Build menu, selecting "Set build configuration" and then
picking a config, then build!

* Using the makefiles *
To use the makefiles, start up a command line and navigate to the
flamerobin directory. There, run the following command:

nmake -f makefile.vc <BUILD OPTIONS>

Build options can be any of the following:

WXDIR=<dir> - tells the makefile where to find the root wxWidgets directory
FINAL=<0,1> - tells whether to build debug (0) or release (1) build
USEDLL=<0,1> - tells whether to link against wx static or dynamic libs
UNICODE=<0,1> - tells whether to link against wx ansi or unicode build

WXDIR *must* be specified (or set as an environment variable), but the rest
default to 0 and are optional.

-------------------------------
-- MSW - Building wxWidgets with Visual C++ 2005 Express
-------------------------------

Unpack the archive somewhere, for example c:\wxWin260:

* Using the dsp/dsw/sln projects *

Double click on build\msw\wx.dsw, convert to new format, select a build configuration by
going to the Build menu, selecting "Set build configuration" and then 
picking a config, then build!

Double click on contrib\build\stc\stc.dsw, convert to new format, select a build configuration by going to the Build menu, selecting "Set build configuration" and then
picking a config, then build!


* Using the makefiles *
Open MS-DOS prompt and go into "build\msw" directory:
set WXWIN=c:\wxWin260
set WXDIR=c:\wxWin260
nmake -f makefile.vc BUILD=release RUNTIME_LIBS=static
cd ..\..
cd contrib\build\stc
nmake -f makefile.vc BUILD=release RUNTIME_LIBS=static

As you can see, it is important to build STC package too. It is for
wxStyledTextControl which is used in many places in FlameRobin.



-------------------------------
-- MSW - Borland's Free C++ Build Instructions
-------------------------------

Borland's Free C++ Compiler (in short BCC) is a freeware version of
Borland's C++ compiler used in C++ Builder product:

http://www.borland.com/bcppbuilder/freecompiler/

I have used version 5.5.1.

Borland's command line linker (ilink32) has bugs that sometime make is crash
when linking FlameRobin executable. We haven't been able to determine the
cause of this. Since version 0.4.0, build was brome, then after 0.4.5 it
started to work until 0.7.0. Since 0.7.2 it works again. This build is NOT
OFFICIALLY SUPPORTED by our team, although it may work for you. In case you
want to give it a shot, here's how:

Assuming that you have wxWidgets installed in c:\wxwin260, you should open MS-DOS
prompt, cd to flamerobin root directory, and execute:

set WXDIR=c:\wxwin260
make -f makefile.bcc STATICRTL=1 FINAL=1

for release build, or

set WXDIR=c:\wxwin260
make -f makefile.bcc STATICRTL=1 FINAL=0

for debug build. Explanantion:

WXDIR=<dir>     - tells the makefile where to find the root wxWidgets directory
FINAL=<0,1>     - tells whether to build debug (0) or release (1) build
STATICRTL=<0,1> - tells whether to link against wx static(1) or dynamic(0) libs


-------------------------------
-- Unix - Autoconf Build Instructions
-------------------------------
To build on Unix or MinGW, simply open a command line, cd into the flamerobin
root directory, and execute the following commands:

mkdir debug
cd debug
../configure --with-wx-config=/my/path/to/wx-config --enable-debug

for a build in debug configuration, and the following commands

mkdir release
cd release
../configure --with-wx-config=/my/path/to/wx-config --disable-debug

for a build in release configuration.

You only need to specify wx-config if you do not have a wx-config that can
be found on the PATH, or if you want to use a wx-config other than the
default one.

Running the command

make

should build the flamerobin executable. If you experience any problems,
please check the flamerobin developer mailing list archive, or ask a
question there.



-------------------------------
-- MSW - Building wxWidgets with Borland's Free C++ Compiler
-------------------------------

Unpack the archive somewhere, for example c:\wxWin260, open MS-DOS prompt
and go into "build\msw" directory:

set WXWIN=c:\wxWin260
set WXDIR=c:\wxWin260
make -f makefile.bcc BUILD=release RUNTIME_LIBS=static
cd ..\..
cd contrib\build\stc
make -f makefile.bcc BUILD=release RUNTIME_LIBS=static

As you can see, it is important to build STC package too. It is for
wxStyledTextControl which is used in many places in FlameRobin.


-------------------------------
-- Unix - Building wxWidgets with configure
-------------------------------

Unpack the sources, enter "build" directory and run "./configure". There
are many options you may like to set, run "./configure --help" to find about
them. We assume Gtk2 static release build with Unicode support:

./configure --disable-shared --disable-debug --prefix=/opt/wxwidgets
make
make install

Now, you have to compile STC library. It is for wxStyledTextControl which
is used in many places in FlameRobin. Enter "contrib/src/stc" directory:

make
make install

